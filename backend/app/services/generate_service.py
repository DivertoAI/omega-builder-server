from __future__ import annotations

import json
import re
import time
from pathlib import Path
from typing import Dict, Any, List, Tuple

from ..models.spec import OmegaSpec

def _slug(s: str) -> str:
    s = (s or "app").lower()
    s = re.sub(r"[^a-z0-9\-]+", "-", s).strip("-")
    return s or "app"

def _build_root(workspace: Path) -> Path:
    return Path(workspace) / "builds"

def _files_for_react(spec: OmegaSpec) -> List[Tuple[str, str]]:
    name = spec.name or "Omega App"
    desc = spec.description or ""
    theme_dark_css = """
:root { color-scheme: dark; }
* { box-sizing: border-box; }
html, body, #root { height: 100%; margin: 0; }
body { background:#0b0f16; color:#e5e7eb; font-family: ui-sans-serif,system-ui,Segoe UI,Roboto,Helvetica,Arial; }
a { color:#93c5fd; text-decoration:none; }
.container { max-width: 900px; margin: 0 auto; padding: 2rem; }
.card { background:#111827; border:1px solid #1f2937; border-radius: 12px; padding:1rem; box-shadow: 0 4px 16px rgba(0,0,0,0.25); }
.title { font-size: 1.5rem; font-weight: 700; margin: 0 0 0.5rem; }
.sub { opacity: 0.75; margin: 0 0 1rem; }
.nav { margin: 1rem 0; display:flex; gap:.5rem; flex-wrap: wrap; }
.btn { background:#1f2937; border:1px solid #374151; border-radius: 10px; padding:.5rem .75rem; }
.badge { display:inline-block; padding:.125rem .5rem; border:1px solid #374151; border-radius:9999px; font-size:.75rem; }
    """.strip()

    nav_items = spec.navigation.items if spec.navigation and spec.navigation.items else []
    nav_html = "".join(
        f'<a class="btn" href="{it.get("path","/")}">{it.get("title","")}</a>'
        for it in nav_items
    )

    idx_html = f"""<!doctype html>
<html>
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <title>{name}</title>
    <link rel="stylesheet" href="/styles.css" />
  </head>
  <body>
    <div id="root">
      <div class="container">
        <div class="card">
          <h1 class="title">{name}</h1>
          <p class="sub">{desc}</p>
          <div class="nav">{nav_html or '<span class="badge">home</span>'}</div>
        </div>
      </div>
    </div>
    <script src="/main.js" type="module"></script>
  </body>
</html>
"""

    main_js = """export function hello(){ console.log("hello from omega codegen"); } hello();"""

    pkg_json = {
        "name": _slug(name),
        "private": True,
        "version": "0.1.0",
        "scripts": {
            "dev": "npx --yes vite",
            "build": "npx --yes vite build",
            "preview": "npx --yes vite preview"
        },
        "devDependencies": { "vite": "^5.4.0" }
    }

    files = [
        ("index.html", idx_html),
        ("styles.css", theme_dark_css),
        ("main.js", main_js),
        ("omega.spec.json", json.dumps(spec.model_dump(mode="json"), indent=2)),
        ("package.json", json.dumps(pkg_json, indent=2)),
        (".gitignore", "node_modules\n.dist\nbuild\n.DS_Store\n"),
        ("README.md", f"# {name}\n\nGenerated by Omega Builder.\n\n## Run\n\n```bash\nnpm i\nnpm run dev\n```"),
    ]
    return files

def plan_files(spec: OmegaSpec, target: str = "react") -> List[Tuple[str, str]]:
    target = (target or "react").lower()
    if target == "react":
        return _files_for_react(spec)
    raise ValueError(f"unknown target: {target}")

def write_project(spec: OmegaSpec, workspace: Path, target: str = "react") -> Dict[str, Any]:
    root = _build_root(workspace)
    slug = _slug(spec.name or "app")
    ts = int(time.time())
    outdir = root / f"{slug}-{ts}"
    outdir.mkdir(parents=True, exist_ok=True)

    files = plan_files(spec, target)
    manifest = []
    for rel, content in files:
        p = outdir / rel
        p.parent.mkdir(parents=True, exist_ok=True)
        p.write_text(content, encoding="utf-8")
        manifest.append({"path": str(p.relative_to(outdir)), "bytes": len(content.encode("utf-8"))})

    return {
        "status": "ok",
        "target": target,
        "dir": str(outdir),
        "files": manifest,
    }